<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xc.xnode.login.dao.LoginInfoMapper" >
  <resultMap id="BaseResultMap" type="com.xc.xnode.login.domain.LoginInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="failed_num" property="failedNum" jdbcType="INTEGER" />
    <result column="last_login" property="lastLogin" jdbcType="TIMESTAMP" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, failed_num, last_login, login_ip
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from login_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from login_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xc.xnode.login.domain.LoginInfo" >
    insert into login_info (id, user_id, failed_num, 
      last_login, login_ip)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{failedNum,jdbcType=INTEGER}, 
      #{lastLogin,jdbcType=TIMESTAMP}, #{loginIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xc.xnode.login.domain.LoginInfo" >
    insert into login_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="failedNum != null" >
        failed_num,
      </if>
      <if test="lastLogin != null" >
        last_login,
      </if>
      <if test="loginIp != null" >
        login_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="failedNum != null" >
        #{failedNum,jdbcType=INTEGER},
      </if>
      <if test="lastLogin != null" >
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null" >
        #{loginIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xc.xnode.login.domain.LoginInfo" >
    update login_info
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="failedNum != null" >
        failed_num = #{failedNum,jdbcType=INTEGER},
      </if>
      <if test="lastLogin != null" >
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null" >
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xc.xnode.login.domain.LoginInfo" >
    update login_info
    set user_id = #{userId,jdbcType=INTEGER},
      failed_num = #{failedNum,jdbcType=INTEGER},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      login_ip = #{loginIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
  	select * from login_info l
  		left join user u on l.user_id = u.id
  			where u.username = #{username,jdbcType=VARCHAR}
  </select>
</mapper>