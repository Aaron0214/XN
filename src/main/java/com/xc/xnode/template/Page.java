/* * Project Name: xnode * File Name: Page.java * Class Name: Page * * Copyright 2014 xuce * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or * implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.xc.xnode.template;import java.io.Serializable;import java.util.ArrayList;import java.util.List;import com.fasterxml.jackson.annotation.JsonAutoDetect;import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;import com.fasterxml.jackson.annotation.JsonProperty;/** * 分页 *  * @author xuce * @version 1.0_beta */@JsonAutoDetect(fieldVisibility = Visibility.NONE, getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE, creatorVisibility = Visibility.NONE)public class Page<T> implements Serializable {	private static final long	serialVersionUID	= -2053800594583879853L;	/** 内容 */	private final List<T>		content				= new ArrayList<T>();	/** 总记录数 */	private final long			total;	/** 分页信息 */	private final Pageable		pageable;	/**	 * 初始化一个新创建的Page对象	 */	public Page() {		this.total = 0L;		this.pageable = new Pageable();	}	/**	 * @param content	 *            内容	 * @param total	 *            总记录数	 * @param pageable	 *            分页信息	 */	public Page(List<T> content, long total, Pageable pageable) {		this.content.addAll(content);		this.total = total;		this.pageable = pageable == null ? new Pageable() : pageable;	}	/**	 * 获取页码	 * 	 * @return 页码	 */	@JsonProperty	public Integer getPageNumber() {		return pageable.getPageNumber();	}	/**	 * 获取每页记录数	 * 	 * @return 每页记录数	 */	@JsonProperty	public Integer getPageSize() {		return pageable.getPageSize();	}	/**	 * 获取搜索属性	 * 	 * @return 搜索属性	 */	public String getSearchProperty() {		return pageable.getSearchProperty();	}	/**	 * 获取搜索值	 * 	 * @return 搜索值	 */	public String getSearchValue() {		return pageable.getSearchValue();	}	/**	 * 获取排序属性	 * 	 * @return 排序属性	 */	public String getOrderProperty() {		return pageable.getOrderProperty();	}	/**	 * 获取筛选	 * 	 * @return 筛选	 */	public List<Filter> getFilters() {		return pageable.getFilters();	}	/**	 * 获取总页数	 * 	 * @return 总页数	 */	@JsonProperty	public int getTotalPages() {		return (int) Math.ceil((double) getTotal() / (double) getPageSize());	}	/**	 * 获取内容	 * 	 * @return 内容	 */	@JsonProperty("rows")	public List<T> getContent() {		return content;	}	/**	 * 获取总记录数	 * 	 * @return 总记录数	 */	@JsonProperty	public Long getTotal() {		return total;	}	/**	 * 获取分页信息	 * 	 * @return 分页信息	 */	public Pageable getPageable() {		return pageable;	}}