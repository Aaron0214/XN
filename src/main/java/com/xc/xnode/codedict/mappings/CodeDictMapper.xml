<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xc.xnode.codedict.dao.CodeDictMapper" >
  <resultMap id="BaseResultMap" type="com.xc.xnode.codedict.domain.CodeDict" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, code, value, level, pid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from code_dict
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from code_dict
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xc.xnode.codedict.domain.CodeDict" >
    insert into code_dict (id, type, code, 
      value, level, pid)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, 
      #{value,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xc.xnode.codedict.domain.CodeDict" >
    insert into code_dict
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="pid != null" >
        pid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xc.xnode.codedict.domain.CodeDict" >
    update code_dict
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xc.xnode.codedict.domain.CodeDict" >
    update code_dict
    set type = #{type,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectDistictList" resultMap="BaseResultMap" parameterType="java.lang.String">
  	 select * from code_dict 
  	 	where pid = (
  	 		select id from code_dict 
  	 			where code=#{code,jdbcType=VARCHAR}
  	 		)
  </select>
  <select id="getIdByCode" resultType="java.lang.Integer" parameterType="java.lang.String">
  		select id from code_dict where code = #{code,jdbcType=VARCHAR}
  </select>
  <select id="selectDistictListByPid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	 select * from code_dict 
  	 	where pid = #{pid,jdbcType=INTEGER}
  </select>
</mapper>