<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xc.xnode.user.dao.AddressMapper" >
  <resultMap id="BaseResultMap" type="com.xc.xnode.user.domain.Address" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="country_id" property="countryId" jdbcType="INTEGER" />
    <result column="province_id" property="provinceId" jdbcType="INTEGER" />
    <result column="city_id" property="cityId" jdbcType="INTEGER" />
    <result column="town_id" property="townId" jdbcType="INTEGER" />
    <result column="addr" property="addr" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, country_id, province_id, city_id, town_id, addr
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from address
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from address
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xc.xnode.user.domain.Address" >
    insert into address (id, type, country_id, 
      province_id, city_id, town_id, 
      addr)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{countryId,jdbcType=INTEGER}, 
      #{provinceId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, #{townId,jdbcType=INTEGER}, 
      #{addr,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xc.xnode.user.domain.Address" >
    insert into address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="countryId != null" >
        country_id,
      </if>
      <if test="provinceId != null" >
        province_id,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="townId != null" >
        town_id,
      </if>
      <if test="addr != null" >
        addr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="countryId != null" >
        #{countryId,jdbcType=INTEGER},
      </if>
      <if test="provinceId != null" >
        #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="townId != null" >
        #{townId,jdbcType=INTEGER},
      </if>
      <if test="addr != null" >
        #{addr,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xc.xnode.user.domain.Address" >
    update address
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="countryId != null" >
        country_id = #{countryId,jdbcType=INTEGER},
      </if>
      <if test="provinceId != null" >
        province_id = #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="townId != null" >
        town_id = #{townId,jdbcType=INTEGER},
      </if>
      <if test="addr != null" >
        addr = #{addr,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xc.xnode.user.domain.Address" >
    update address
    set type = #{type,jdbcType=INTEGER},
      country_id = #{countryId,jdbcType=INTEGER},
      province_id = #{provinceId,jdbcType=INTEGER},
      city_id = #{cityId,jdbcType=INTEGER},
      town_id = #{townId,jdbcType=INTEGER},
      addr = #{addr,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectMaxId" resultType="java.lang.Integer">
  	select max(id) from address
  </select>
</mapper>